{"version":3,"sources":["webpack:///./src/index.scss?7da6","index.scss","webpack:///./src/app.scss?8f6e","app.scss","Components/mapView.jsx","Components/favorites.jsx","app.jsx","serviceWorker.js","index.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","ACCESS_TOKEN","GEOCODINGURL","MapView","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","containerEl","mapContainer","current","mapboxGl","accessToken","map","Map","container","style","center","zoom","on","e","url","concat","lngLat","lng","lat","fetch","then","response","json","data","coordinates","features","geometry","id","properties","foursquare","el","document","createElement","className","backgroundImage","Marker","setLngLat","addTo","favorite","place_name","split","category","props","updateFavorites","setState","React","createRef","state","flyTo","bearing","speed","curve","easing","t","essential","react_default","a","ref","Component","Favorites","favorites","key","onClick","jumpToFavorite","deleteFavorite","App","childRef","toConsumableArray","favoriteId","filter","item","getElementById","remove","bind","mapView","Boolean","window","location","hostname","match","ReactDOM","render","src_app","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac256cab.chunk.js","sourcesContent":["\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-3-2!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-3-2!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-3-2!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  margin: 0;\\n  padding: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\", \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\", monospace;\\n}\\n\\n.map-container {\\n  height: 100vh;\\n  width: 100vw;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-3-2!./app.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-3-2!./app.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--6-oneOf-3-2!./app.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".App {\\n  text-align: center;\\n}\\n\\n.App-logo {\\n  animation: App-logo-spin infinite 20s linear;\\n  height: 40vmin;\\n}\\n\\n.App-header {\\n  background-color: #282c34;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: calc(10px + 2vmin);\\n  color: white;\\n}\\n\\n.App-link {\\n  color: #61dafb;\\n}\\n\\n@keyframes App-logo-spin {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n.marker {\\n  background-size: cover;\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 50%;\\n  cursor: pointer;\\n}\\n\\n.mapboxgl-popup {\\n  max-width: 400px;\\n  font: 12px/20px \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif;\\n}\\n\\n.mapboxgl-popup-content {\\n  text-align: center;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n}\", \"\"]);\n\n// exports\n","import React from \"react\";\nimport mapboxGl from \"mapbox-gl\";\n// import style from \"../data/style.json\";\n\nconst ACCESS_TOKEN =\n  \"pk.eyJ1IjoiZGFzdWxpdCIsImEiOiJjaXQzYmFjYmkwdWQ5MnBwZzEzZnNub2hhIn0.EDJ-lIfX2FnKhPw3nqHcqg\";\nconst GEOCODINGURL = \"https://api.mapbox.com/geocoding/v5/mapbox.places/\";\n\nclass MapView extends React.Component {\n  constructor() {\n    super();\n    this.mapContainer = React.createRef();\n  }\n\n  componentDidMount = () => {\n    const containerEl = this.mapContainer;\n    if (containerEl && containerEl.current) {\n      mapboxGl.accessToken = ACCESS_TOKEN;\n      const map = new mapboxGl.Map({\n        container: containerEl.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center: [-77.04, 38.907],\n        zoom: 15,\n      });\n\n      map.on(\"click\", (e) => {\n        let url = `${GEOCODINGURL}${e.lngLat.lng},${e.lngLat.lat}.json?access_token=${ACCESS_TOKEN}&types=poi`;\n\n        fetch(url)\n          .then((response) => response.json())\n          .then((data) => {\n            const coordinates = data.features[0].geometry.coordinates;\n            const id = data.features[0].properties.foursquare;\n\n            let el = document.createElement(\"div\");\n            el.className = \"marker\";\n            el.id = `marker_${id}`;\n            el.style.backgroundImage =\n              \"url('http://maps.google.com/mapfiles/ms/micons/blue.png')\";\n            new mapboxGl.Marker(el).setLngLat(coordinates).addTo(map);\n\n            let favorite = {\n              id: id,\n              place_name: data.features[0].place_name.split(\",\")[0],\n              coordinates: coordinates,\n              category: data.features[0].properties.category,\n            };\n            this.props.updateFavorites(favorite);\n          });\n      });\n\n      this.setState({ map });\n    }\n  };\n\n  jumpToFavorite(favorite) {\n    this.state.map.flyTo({\n      center: favorite.coordinates,\n      zoom: 17,\n      bearing: 0,\n      speed: 0.7,\n      curve: 1,\n      easing: function(t) {\n        return t;\n      },\n      essential: true,\n    });\n  }\n\n  render() {\n    return <div ref={this.mapContainer} className=\"map-container\" />;\n  }\n}\n\nexport default MapView;\n","import React, { Component } from \"react\";\n\nclass Favorites extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Favorites Point of Intrests</h1>\n        <ul>\n          {this.props.favorites.map((favorite, i) => (\n            <div key={i}>\n              <li\n                key={i}\n                onClick={() => this.props.jumpToFavorite(favorite.id)}\n              >\n                {favorite.place_name}\n              </li>\n              <button\n                id={favorite.id}\n                onClick={() => this.props.deleteFavorite(favorite.id)}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from \"react\";\nimport \"./app.scss\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport MapView from \"./Components/mapView\";\nimport Favorites from \"./Components/favorites\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.childRef = React.createRef();\n    this.state = {\n      favorites: [],\n    };\n  }\n\n  updateFavorites(favorite) {\n    this.setState({ favorites: [...this.state.favorites, favorite] });\n  }\n\n  deleteFavorite(favoriteId) {\n    this.setState({\n      favorites: this.state.favorites.filter((item) => item.id !== favoriteId),\n    });\n    document.getElementById(`marker_${favoriteId}`).remove();\n  }\n\n  jumpToFavorite(favoriteId) {\n    this.childRef.current.jumpToFavorite(\n      this.state.favorites.filter((item) => item.id === favoriteId)[0]\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Favorites\n          favorites={this.state.favorites}\n          deleteFavorite={this.deleteFavorite.bind(this)}\n          jumpToFavorite={this.jumpToFavorite.bind(this)}\n        ></Favorites>\n        <MapView\n          ref={this.childRef}\n          updateFavorites={this.updateFavorites.bind(this)}\n        ></MapView>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}